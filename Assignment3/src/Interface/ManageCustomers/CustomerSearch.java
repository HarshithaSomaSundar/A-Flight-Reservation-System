/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ManageCustomers;

import Buisness.AirlineDirectory;
import Buisness.Airlines;
import Buisness.Flights;
import Buisness.FlightsDirectory;
import java.awt.CardLayout;
import java.awt.List;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harshitha
 */
public class CustomerSearch extends javax.swing.JPanel {

    /**
     * Creates new form CustomerSearch
     */
    
    JPanel userProcessContainer;
   
   // JSplitPane leftJPanel;
    
    SimpleDateFormat formatter;
     AirlineDirectory airlineDir;
     //FlightsDirectory fliDir;
     
       Airlines air;        
          ArrayList<Flights> masterFlightSchedulesList;  
          ArrayList<Flights> filteredFlights;

    public CustomerSearch(JPanel userProcessContainer,AirlineDirectory airlineDir,Airlines air) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.airlineDir=airlineDir;
         formatter = new SimpleDateFormat("dd-MMM-yyyy");
      
        masterFlightSchedulesList= new ArrayList<Flights>();   
     //   this.leftJPanel=leftJPanel;
       
    
            mergeFlights();
    }
    public void mergeFlights()
    {
        //air.getFlightDir();
       
        for (Airlines airs : airlineDir.getAirLineDirtList())
        {
            FlightsDirectory a = airs.getFlightDir();
            for(Flights f: a.getFlightsDirtList() )
            {
                masterFlightSchedulesList.add(f);
            }
                
                
            
        }
        
        for (Flights f : masterFlightSchedulesList )
    {
        System.out.println("flights name are "+f.getAirlineName()+" and fnos are "+ f.getFlightNumber()+" and "+ f.getDepratureTime()+"and"+f.getTimeofday());
        
    }
         sourceCombo.removeAllItems();
       for(Flights f : masterFlightSchedulesList) {
           sourceCombo.addItem(f.getSource());
       }
       
       destCombo.removeAllItems();
        for(Flights f : masterFlightSchedulesList) {
           destCombo.addItem(f.getDestination());
       }
          
       
        
            
    }
    
    
    
    
      /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        sourceTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        DesTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        DateTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        todTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        FilteredFlightsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        Book = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        dchoose = new com.toedter.calendar.JDateChooser();
        sourceCombo = new javax.swing.JComboBox();
        destCombo = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(44, 62, 80));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Source :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Destination :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Date :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Time of Day: ");

        FilteredFlightsTable.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        FilteredFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airline Name", "Flight Id", "Time", "Available seats"
            }
        ));
        jScrollPane1.setViewportView(FilteredFlightsTable);

        jButton1.setBackground(new java.awt.Color(255, 153, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Book.setBackground(new java.awt.Color(255, 153, 102));
        Book.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Book.setText("Book Flight >>");
        Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jButton2.setText("SEARCH BEST FLIGHTS");

        sourceCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        destCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Book)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sourceTF)
                                    .addComponent(DateTF, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(dchoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(sourceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(149, 149, 149)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(DesTF)
                                    .addComponent(todTF, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(destCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 957, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(sourceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sourceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(DateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(DesTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(todTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dchoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(Book, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populateTable();
        
    }
 public void populateTable( )
         
         
    {
        
        
     SimpleDateFormat parser = new SimpleDateFormat("MM-dd-yyyy");
       
          filteredFlights = new ArrayList<Flights>();
        
        for (Flights ad : masterFlightSchedulesList) {
           
            System.out.println(parser.format(ad.getDepratureTime())+ "cerfre"+dchoose.getDate() );
            if (ad.getSource().equalsIgnoreCase(sourceCombo.getSelectedItem().toString())
                    && ad.getDestination().equalsIgnoreCase(destCombo.getSelectedItem().toString())
                    &&  parser.format(ad.getDepratureTime()).equalsIgnoreCase(parser.format(dchoose.getDate()))
                    && ad.getTimeofday().equalsIgnoreCase(todTF.getText()))
            {
                filteredFlights.add(ad);

            }

        }
         DefaultTableModel model = (DefaultTableModel)FilteredFlightsTable.getModel();
        
        
        for(Flights f : filteredFlights) {
            Object row[] = new Object[4];
            row[0] = f.getAirlineName();
            row[1]=f;
            row[2]=f.getDepratureTime();
            row[3]=f.getNoOfSeats();
            model.addRow(row);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookActionPerformed
        // TODO add your handling code here:
        int selectRow= FilteredFlightsTable.getSelectedRow();
        if(selectRow<0)
        {
             JOptionPane.showMessageDialog(null, "Please select a flight to book!!");
        }
        else
        {
            Flights f=(Flights)FilteredFlightsTable.getValueAt(selectRow, 1);
            
            System.out.println("flight sending is"+f);
            BookSeats bs= new BookSeats(userProcessContainer,f,airlineDir);
            userProcessContainer.add("bookSeats",bs);
            CardLayout layout=(CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_BookActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Book;
    private javax.swing.JTextField DateTF;
    private javax.swing.JTextField DesTF;
    private javax.swing.JTable FilteredFlightsTable;
    private com.toedter.calendar.JDateChooser dchoose;
    private javax.swing.JComboBox destCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox sourceCombo;
    private javax.swing.JTextField sourceTF;
    private javax.swing.JTextField todTF;
    // End of variables declaration//GEN-END:variables
}
